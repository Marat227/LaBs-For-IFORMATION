#include <iostream>
#include <string>
#include <Windows.h>
using namespace std;

int interpol_search(int* arr, int key, int n) {
	int left = 0;
	int right = n - 1;
	while (left <= right) {
		int mid = left + (((key - arr[left]) * (right - left)) / (arr[right] - arr[left]));
		if (arr[mid] == key)
			return mid;
		else {
			if (arr[mid] < key) 
				left = mid + 1;
			else 
				right = mid - 1;
		}
	}
	return -1;
}

void quicksort(int arr[], int first, int last){
	int mid, count;
	int f = first, l = last;
	mid = arr[(f + l) / 2];
	do
	{
		while (arr[f] < mid) {
			f++;
		}
		while (arr[l] > mid) {
			l--;
		}
		if (f <= l)
		{
			count = arr[f];
			arr[f] = arr[l];
			arr[l] = count;
			f++;
			l--;
		}
	} while (f < l);
	if (first < l) quicksort(arr, first, l);
	if (f < last) quicksort(arr, f, last);
}

int string_search(string text, string pattern) {
	int n = text.length();
	int m = pattern.length();
	for (int i = 0; i <= n - m; i++) {
		bool found = true;
		int j = 0;
		while (j < m && found) {
			found = (text[i + j] == pattern[j]);
			j++;
		}
		if (found)
			return i;
	}
	return -1;
}

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	int n, key, pos;
	cout << "ИНТЕРПОЛЯЦИОННЫЙ ПОИСК: " << endl;
	cout << "Введите количество символов в массиве: "; cin >> n;
	int* arr = new int[n];
	cout << "Введите элементы массива: ";
	for (int i = 0; i < n; i++) {
		cin >> arr[i];
	}
	cout << "Отсортированный массив: "; quicksort(arr, 0, n-1);
	for (int i = 0; i < n; i++) {
		cout << arr[i] << ' ';
	}
	cout << endl << "Введите ключ поиска: "; cin >> key;
	pos = interpol_search(arr, key, n);
	if (pos == -1)
		cout << "Ключ не найден";
	else 
		cout << "Номер искомого ключа в массиве: " << pos + 1;
	cout << endl << endl;
	cout << "ПРЯМОЙ ПОИСК ПОДСТРОКИ В СТРОКЕ: " << endl;
	string s;
	string s1;
	cin.ignore();
	cout << "Введите строку: "; getline(cin, s);
	cout << "Введите подстроку: "; getline(cin, s1);
	int pos1;
	pos1 = string_search(s, s1);
	if (pos1 == -1)
		cout << "Подстрока не найдена";
	else
		cout << "Номер первого вхождения первого элемента подстроки в строке: " << pos1 + 1;
	cout << endl;
	return 0;
}